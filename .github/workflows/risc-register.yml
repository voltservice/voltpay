name: RISC Register
on: { workflow_dispatch: {} }

permissions:
  id-token: write
  contents: read

env:
  PROJECT_ID: micro-harbor-469912-u6
  PROJECT_NUMBER: 1018663726434
  POOL_ID: voltpay-pool
  PROVIDER_ID: github-actions
  SA_EMAIL: voltpay-service-account@micro-harbor-469912-u6.iam.gserviceaccount.com
  RECEIVER_URL: https://metalbrain.net/risc/receiver

jobs:
  register:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 🔐 Mint an ACCESS TOKEN with the RISC scopes via WIF
      - id: auth
        uses: google-github-actions/auth@v3
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.POOL_ID }}/providers/${{ env.PROVIDER_ID }}
          service_account: ${{ env.SA_EMAIL }}
          token_format: access_token
          scopes: |
            https://www.googleapis.com/auth/risc.configuration.readwrite
            https://www.googleapis.com/auth/risc.verify

      - name: stream:update
        env:
          ACCESS_TOKEN: ${{ steps.auth.outputs.access_token }}
          RECEIVER_URL: ${{ env.RECEIVER_URL }}
        run: |
          set -euo pipefail
          jq -n --arg url "$RECEIVER_URL" '{
            delivery:{delivery_method:"https://schemas.openid.net/secevent/risc/delivery-method/push",url:$url},
            events_requested:[
              "https://schemas.openid.net/secevent/risc/event-type/account-disabled",
              "https://schemas.openid.net/secevent/risc/event-type/account-enabled",
              "https://schemas.openid.net/secevent/risc/event-type/account-credential-change-required",
              "https://schemas.openid.net/secevent/risc/event-type/verification"
            ]
          }' > body.json

          code=$(curl -sS -o resp.json -w '%{http_code}' \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d @body.json https://risc.googleapis.com/v1beta/stream:update)
          echo "HTTP $code"; cat resp.json
          test "$code" -ge 200 -a "$code" -lt 300

      - name: stream:verify
        env:
          ACCESS_TOKEN: ${{ steps.auth.outputs.access_token }}
        run: |
          set -euo pipefail
          code=$(curl -sS -o resp.json -w '%{http_code}' \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"state":"voltpay-ci-probe"}' https://risc.googleapis.com/v1beta/stream:verify)
          echo "HTTP $code"; cat resp.json
          test "$code" -ge 200 -a "$code" -lt 300
