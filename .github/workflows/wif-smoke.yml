name: WIF Smoke Test
on:
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  PROJECT_ID: micro-harbor-469912-u6
  PROJECT_NUMBER: 1018663726434
  POOL_ID: voltpay-pool
  PROVIDER_ID: github-actions
  SA_EMAIL: voltpay-service-account@micro-harbor-469912-u6.iam.gserviceaccount.com

jobs:
  wif-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install gcloud first
      - uses: google-github-actions/setup-gcloud@v2

      # 🔐 Workload Identity Federation (no JSON keys)
      - id: auth
        uses: google-github-actions/auth@v3
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.POOL_ID }}/providers/${{ env.PROVIDER_ID }}
          service_account: ${{ env.SA_EMAIL }}
          create_credentials_file: true
          export_environment_variables: true
          cleanup_credentials: true

      # Clean any lingering overrides & set project explicitly
      - name: Configure gcloud project
        run: |
          gcloud config unset auth/credential_file_override || true
          gcloud config set project "${PROJECT_ID}"

      - name: Show active account & project
        run: |
          gcloud auth list
          echo "Project: $(gcloud config get-value project 2>/dev/null)"

      # 🧪 Print an access token prefix and make a harmless call (won't fail the job)
      - name: Print access token (truncated) and test a call
        continue-on-error: true
        run: |
          ACCESS_TOKEN="$(gcloud auth print-access-token)"
          echo "ACCESS_TOKEN: ${ACCESS_TOKEN:0:12}..."
          # This requires roles/viewer; keep non-blocking:
          curl -sS -H "Authorization: Bearer $ACCESS_TOKEN" \
            "https://cloudresourcemanager.googleapis.com/v1/projects/${PROJECT_ID}" \
            | head -n 5

      # 🔎 Optional: show the OIDC claims used for the exchange (no set-output)
      - name: Show OIDC claims (temporary)
        uses: actions/github-script@v7
        env:
          AUD: //iam.googleapis.com/projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.POOL_ID }}/providers/${{ env.PROVIDER_ID }}
        with:
          script: |
            const id = await core.getIDToken(process.env.AUD);
            core.setSecret(id);
            const payload = JSON.parse(Buffer.from(id.split('.')[1], 'base64').toString());
            core.info(`repository=${payload.repository}`);
            core.info(`ref=${payload.ref}`);
            core.info(`workflow_ref=${payload.workflow_ref || ''}`);
            core.info(`actor=${payload.actor}`);
            core.info(`event_name=${payload.event_name}`);
            // If you really need these later, write to GITHUB_OUTPUT:
            const fs = require('fs');
            fs.appendFileSync(process.env.GITHUB_OUTPUT, `oidc_payload=${JSON.stringify(payload)}\n`);